/*
 * config_par.h
 *
 *  Created on: 2020年1月3日
 *      Author: Fox
 */

#ifndef SRC_CONFIG_DEVICE_CONFIG_PAR_H_
#define SRC_CONFIG_DEVICE_CONFIG_PAR_H_

#include "stdbool.h"
#include "stm32f10x.h"

//单组最大可配置通道数
#define Power_Relay_Max (4)

//全部设备通道总数
#define MODULE_ALL_NUM Power_Relay_Max

//模块内存储的网络ID号数量
#define Net_IDs_All MODULE_ALL_NUM

//设备信息及保存信息配置
const u16 Module_Style_Relay_Single = 0x0002; //设备类型，单通道继电器

#define Version 0x0100 //固件版本,BCD码，v1.0

#define CONFIG_DATA_FLASH_ADDR_SIZE Net_IDs_All * 2 //配置信息大小，总数*2（字节）
#define FLASH_Page_SIZE 1024                        //STM32芯片FLASH 分页大小，64K产品分页1K
//保存到Flash数据地址分配
#define CONFIG_DATA_FLASH_ADDR (0x0800F000)

//设备配置信息
typedef struct
{
    // u8 dmx512_width; //DMX 512位宽
} device_config;
//需要保存到Flash的配置信息结构体，存于RAM中
typedef struct
{
    u16 Net_IDs[Net_IDs_All];
    u16 Group_Net_IDs[Net_IDs_All];
    u8 save_data_flag; //保存标志位，初始值为0xff说明为程序下载后第一次使用，强制复位
    device_config dev_con;
} Config_Data_Str;

//STM32芯片物理地址12*8字节共同体
union STM32_ID_12Byte
{
    u32 id_u32[3];
    u8 id_u8[12];
};

extern Config_Data_Str Config_Data;
extern union STM32_ID_12Byte STM32_ID;

//配置信息载入和写入操作
void Write_Config_To_Flash(Config_Data_Str *config);  //把配置保存到flash
void Read_Config_Form_Flash(Config_Data_Str *config); //从flash读取配置数据到结构体
void Config_Data_ReInit(Config_Data_Str *config);     //重置所有保存数据,需要调用写入flash函数
void Config_Data_Clear_Even(void);

void Cpu_GetId(void);
bool Is_Config_portid(uint8_t temp_port);
Config_Data_Str *Get_Config_data(void);
union STM32_ID_12Byte *Get_CpuId(void);

#endif /* SRC_CONFIG_DEVICE_CONFIG_PAR_H_ */
